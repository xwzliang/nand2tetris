// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
	static int KEYBOARD_MEMORY_ADDRESS;

    /** Initializes the keyboard. */
    function void init() {
		let KEYBOARD_MEMORY_ADDRESS = 24576;
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		return Memory.peek(KEYBOARD_MEMORY_ADDRESS);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var char c;
		do Output.printChar(0);		// Display the cursor
		while (~Keyboard.keyPressed()) {
			// Do nothing, wait till a key is pressed
		}
		let c = Keyboard.keyPressed();
		while (Keyboard.keyPressed()) {
			// Do nothing, wait for the user to let go
		}
		do Output.backSpace();		// Erase the cursor output
		do Output.printChar(c);		// Display the pressed char
		return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String input_string;
		var char input_char;
		do Output.printString(message);
		let input_string = String.new(20);		// Arbitrary max length
		let input_char = Keyboard.readChar();
		while (~(input_char = 128)) {	// input_char is not newline (enter)
			if (input_char = 129) {		// input_char is backspace
				do input_string.eraseLastChar();
				let input_char = Keyboard.readChar();
			} else {
				let input_string = input_string.appendChar(input_char);
				let input_char = Keyboard.readChar();
			}
		}
		do Output.printString(input_string);
		do Output.println();
		return input_string;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var int input_int;
		var String input_string;
		let input_string = Keyboard.readLine(message);
		let input_int = input_string.intValue();
		return input_int;
    }
}
