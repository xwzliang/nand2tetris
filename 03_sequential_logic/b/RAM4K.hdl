// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load, sel=address[9..11], a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);
	RAM512(in=in, address=address[0..8], load=load0, out=ramout0);
	RAM512(in=in, address=address[0..8], load=load1, out=ramout1);
	RAM512(in=in, address=address[0..8], load=load2, out=ramout2);
	RAM512(in=in, address=address[0..8], load=load3, out=ramout3);
	RAM512(in=in, address=address[0..8], load=load4, out=ramout4);
	RAM512(in=in, address=address[0..8], load=load5, out=ramout5);
	RAM512(in=in, address=address[0..8], load=load6, out=ramout6);
	RAM512(in=in, address=address[0..8], load=load7, out=ramout7);
	Mux8Way16(a=ramout0, b=ramout1, c=ramout2, d=ramout3, e=ramout4, f=ramout5, g=ramout6, h=ramout7, sel=address[9..11], out=out);
}
